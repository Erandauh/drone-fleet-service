openapi: 3.0.0
info:
  title: Drone Fleet Service
  description: >
    A REST API that allows clients to communicate with the drones
  version: 0.2.0
servers:
  - url: localhost:8080/api/v1
    description: Dev environment
paths:
  /drone/register:
    post:
      tags:
        - Drone
      operationId: registerDrone
      summary: registering a drone
      description: registering a drone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drone'
      responses:
        '201':
          description: Drone registered successfully. Response includes a referenced drone
          content:
            application/hal-json:
              schema:
                $ref: '#/components/schemas/DroneRegistered'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '409':
          $ref: '#/components/responses/ConflictError'
        default:
          $ref: '#/components/responses/DefaultError'
  /drone/availabilty:
    get:
      tags:
        - Drone
      operationId: checkAvailbility
      summary: Check drone availabity
      description: Check drone availabity
      responses:
        '200':
          description: Drone
          content:
            application/hal-json:
              schema:
                $ref: '#/components/schemas/Drones'
        '400':
          $ref: '#/components/responses/BadRequestError'
        default:
          $ref: '#/components/responses/DefaultError'
  /drone/{droneSerialNumber}/battery:
    get:
      tags:
        - Drone
      operationId: droneBatteryLevel
      summary: Check drone battery health
      description: Check drone battery health
      responses:
        '200':
          description: Drone
          content:
            application/hal-json:
              schema:
                $ref: '#/components/schemas/BatteryHealth'
        '400':
          $ref: '#/components/responses/BadRequestError'
        default:
          $ref: '#/components/responses/DefaultError'

  /drone/{droneSerialNumber}/medication:
    post:
      tags:
        - Dispatch Medication
      operationId: loadDroneWithMedication
      summary: loading a drone with medication items
      description: loading a drone with medication items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationItems'
      responses:
        '201':
          description: Drone registered successfully. Response includes a referenced drone
          content:
            application/hal-json:
              schema:
                $ref: '#/components/schemas/MedicationItems'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '503':
          $ref: '#/components/responses/ServiceUnavailableError'
        default:
          $ref: '#/components/responses/DefaultError'
    get:
      tags:
        - Dispatch Medication
      operationId: getLoadedMedicationItems
      summary: loaded Medication items for a drone
      description: loaded Medication items for a drone
      responses:
        '200':
          description: Drone registered successfully. Response includes a referenced drone
          content:
            application/hal-json:
              schema:
                $ref: '#/components/schemas/MedicationItems'
        '400':
          $ref: '#/components/responses/BadRequestError'
        default:
          $ref: '#/components/responses/DefaultError'

components:
  parameters:
    droneIdInPathParam:
      in: path
      name: droneId
      description: The native identifier for an Drone
      required: true
      schema:
        type: string
        format: uuid
        example: 85993699-bfcc-406e-9dbc-bcfe59dcfa89
  responses:
    DefaultError:
      description: Default error response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    BadRequestError:
      description: There may be the following reasons. The JSON production object fails to load, or no attributes are recognized, or it is empty. The requirements of the API contract are not satisfied.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    ServiceUnavailableError:
      description: There may be the following reasons. Drone battery capacity less than 25% OR Drone is overloaded
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    NotFoundError:
      description: Object not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    ConflictError:
      description: The entity conflicts with an existing (returned in response).
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  schemas:
    Drone:
      type: object
      properties:
        serialNumber:
          type: string
          example: serial number (100 characters max)
        model:
          type: string
          enum:
            - Lightweight
            - Middleweight
            - Cruiserweight
            - Heavyweight
        weightLimit:
          type: integer
          example: (500gr max)
        batteryCapacity:
          type: integer
          example: 98%
        state:
          type: string
          enum:
            - IDLE
            - LOADING
            - LOADED
            - DELIVERING
            - DELIVERED
            - RETURNING
    DroneRegistered:
      type: object
      allOf:
        - $ref: '#/components/schemas/Drone'
    Drones:
      type: array
      items:
        $ref: '#/components/schemas/Drone'
    Medication:
      type: object
      properties:
        name:
          type: string
          example: (allowed only letters, numbers, ‘-‘, ‘_’)
        weight:
          type: integer
        code:
          type: string
          example: (allowed only upper case letters, underscore and numbers)
        image:
          type: object
          description: (picture of the medication case).
    MedicationItems:
      type: array
      items:
        $ref: '#/components/schemas/Medication'
    BatteryHealth:
      type: object
      properties:
        health:
          type: integer

